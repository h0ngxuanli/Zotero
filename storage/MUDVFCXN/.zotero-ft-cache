
[CSDN首页]

    博客
    下载
    学习
    社区
    falsefalse
    GitCode
    InsCode 

搜索
登录
会员中心
历史
创作中心
发布
Yaml的学习笔记（OmegaConf）
songyuc 已于 2023-03-25 18:26:56 修改 1332 收藏 2
文章标签： yaml
版权
1. 安装 yaml

ruamel 安装：

 conda install ruamel.yaml
 

    1

 

omegaconf 安装： Omegaconf - Releases
2. Yaml格式说明
2.1 数据类型（ yaml 无强制类型限定）

Python中使用 yaml 无法实现对数据类型的强制限定，（在原生yaml中可以使用类型强制转换“!!float 123”，不过 ruamel.yaml 不支持此语法）；
在这里我们使用 !tag 方式来实现来数据类型的声明；
3. 读取yaml

 # 读取yaml文件 with open ( os . path . join ( records , "cfg.yaml" ) , "r" , encoding = "utf-8" ) as yaml_file : yaml_dict = yaml . round_trip_load ( yaml_file ) # 使用OmegaConf载入yaml文件 dict_config = OmegaConf . load ( "cfg.yaml" )
 

    1
    2
    3
    4
    5
    6

 

4. 写入yaml

 # 写入到yaml文件 with open ( os . path . join ( records , "cfg.yaml" ) , "w" , encoding = "utf-8" ) as f : yaml . dump ( dictionary , f )
 

    1
    2
    3

 

5. OmegaConf笔记
5.1 新建字典 [doc]

 conf = OmegaConf . create ( )
 

    1

 

5.2 更新字典
OmegaConf.merge() ≈ \approx ≈ dict.update()

OmegaConf.merge() 的作用跟 dict.update() 类似，不过 dict.update() 函数名的意义会更加明确一些， 实际上 ： OmegaConf.merge() 也是以最后输入的config为配置值的最终设置，相当于 “后来为先” 原则，即时间最顺序最后一个config优先级最高。

    Note
    OmegaConf.merge() 的更新还具有顺序保持的特点，即在参数顺序上时依照“先来为序”的原则，会按照config1的顺序对参数进行排列。

5.3 实现get_leaves_str()

在实现get_leaves_str()时，Jasha在Dsicussions给我们提供了这样一个测试样例：

 def get_leaves_no_check_misses ( cfg , parent = None ) : if not OmegaConf . is_config ( cfg ) : assert parent , cfg return [ f" { parent } = { str ( cfg ) } " ] if OmegaConf . is_list ( cfg ) : items = enumerate ( cfg ) elif OmegaConf . is_config ( cfg ) : items = cfg . items ( ) else : raise NotImplementedError string = [ ] parent = f" { parent } ." if parent else '' for k , v in items : string += get_leaves_no_check_misses ( v , f" { parent } { k } " ) return string # Test case from GitHub conf = OmegaConf . create ( { 'abc' : '???' } ) print ( "\n" . join ( get_leaves_no_check_misses ( conf ) ) ) >> > File "/home/songyuc/software/python/anaconda/anaconda3/envs/conda-general/lib/python3.10/site-packages/omegaconf/dictconfig.py" , line 445 , in _get_impl return self . _resolve_with_default ( File "/home/songyuc/software/python/anaconda/anaconda3/envs/conda-general/lib/python3.10/site-packages/omegaconf/basecontainer.py" , line 63 , in _resolve_with_default raise MissingMandatoryValue ( "Missing mandatory value: $FULL_KEY" ) omegaconf . errors . MissingMandatoryValue : Missing mandatory value : abc full_key : abc object_type = dict
 
 

    1
    2
    3
    4
    5
    6
    7
    8
    9
    10
    11
    12
    13
    14
    15
    16
    17
    18
    19
    20
    21
    22
    23
    24
    25
    26
    27

 

可以看到，在 OmegaConf 中，如果键值的value是missing的状态，访问此键对应的值会报错；
songyuc
关注 关注

    0
    2
    觉得还不错? 一键收藏
    打赏
    0

omegaconf ：灵活的Python配置系统。 您将需要的最后一个
02-13
欧米茄 描述 项目 代码质量 文件与支援 OmegaConf 是一个分层的配置系统，支持合并来自多个源（ YAML 配置文件，数据类/对象和CLI参数）的配置，无论创建该配置如何，均提供一致的API。 发布 稳定（2.0） OmegaConf 2.0稳定版。 使用pip install --upgrade omegaconf 现场教学 运行实时教程：
汇总的 yaml 文件个人 笔记
06-29
汇总的 yaml 文件个人 笔记
No module named ‘ omegaconf ‘ 怎么解决
y632481222的博客
03-11 933
2. 如果您已经安装了 omegaconf 模块，但仍然出现此错误，请确保您的Python环境中只有一个版本，并且您正在使用正确的Python环境。4. 如果您使用的是Anaconda环境，请确保您已经安装了 omegaconf 模块，并且您正在使用正确的环境。如果您仍然无法解决这个问题，请尝试重新安装 omegaconf 模块，并确保您的Python环境配置正确。3. 如果您使用的是虚拟环境，请确保您已经激活了虚拟环境，并且您正在使用正确的虚拟环境。1. 确认您已经安装了 omegaconf 模块。
Python hydra库( OmegaConf )( yaml )
hxxjxw的博客
03-06 1656
Python hydra库
OmegaConf ——一个分层配置系统
qq_44250700的博客
05-18 8741
文章目录一、官方文档链接二、omega简要说明1、 YAML 介绍2、安装三、创建 OmegaConf （具体内容均在官方文档）1、从Empty创建 OmegaConf 2、通过 YAML 创建 OmegaConf 四、 OmegaConf .update 一、官方文档链接 OmegaConf 官方文档链接：https:// omegaconf .readthedocs.io/en/latest/index.html。 Ps：直接读英文文档是一个好习惯。如果读不懂，可以使用网页的翻译功能进行翻译。官方文档中通过代码形象地进行了使用说明
Python库 | omegaconf -2.0.1rc4-py3-none-any.whl
04-24
资源分类：Python库 所属语言：Python 使用前提：需要解压 资源全名： omegaconf -2.0.1rc4-py3-none-any.whl 资源来源：官方 安装方法：https://lanzao.blog.csdn.net/article/details/101784059
No module named ‘ omegaconf ‘ 怎么解决这个问题
y632481222的博客
03-11 751
2. 如果您已经安装了 omegaconf 模块，但仍然出现此错误，请确保您的Python环境中只有一个版本，并且您正在使用正确的Python环境。4. 如果您使用的是Anaconda环境，请确保您已经安装了 omegaconf 模块，并且您正在使用正确的环境。如果您仍然无法解决这个问题，请尝试重新安装 omegaconf 模块，并确保您的Python环境配置正确。3. 如果您使用的是虚拟环境，请确保您已经激活了虚拟环境，并且您正在使用正确的虚拟环境。1. 确认您已经安装了 omegaconf 模块。
pandas 学习 笔记 —merge()函数详解
sunmingyang1987的博客
06-13 3524
目录1、merge()中的常用参数2、举例 1、merge()中的常用参数 pd.merge(left, right, how='inner', on=None, left_on=None, right_on=None, left_index=False, right_index=False, sort=True, suffixes=('_x', '_y')) left: 拼接的左侧DataFrame对象 right: 拼接的右侧DataFrame对象 on: 指定两
No module named ‘ omegaconf 怎么办
y632481222的博客
03-11 115
2. 如果您已经安装了 omegaconf 模块，但仍然出现此错误，请确保您的Python环境中只有一个版本，并且您正在使用正确的Python环境。4. 如果您使用的是Anaconda环境，请确保您已经安装了 omegaconf 模块，并且您正在使用正确的环境。3. 如果您使用的是虚拟环境，请确保您已经激活了虚拟环境，并且您正在使用正确的虚拟环境。这个问题通常是因为缺少 omegaconf 模块导致的。1. 确认您已经安装了 omegaconf 模块。
OmegaConf ( yaml 文件)
hxxjxw的博客
03-06 401
OmegaConf ( yaml 文件)
Kubernetes架构 学习 笔记
02-25
Kubernetes是Google开源的容器集群管理系统，其提供应用部署、维护、扩展机制等功能，利用Kubernetes能方便地管理跨机器运行容器化的应用，是Docker分布式系统的解决方案。k8s里所有的资源都可以用 yaml 或Json定义。Master节点负责整个集群的控制和管理，所有的控制命令都是发给它，上面运行着一组关键进程：kube-apiserver：提供了HTTPREST接口，是k8s所有资源增删改查等操作的唯一入口，也是集群控制的入口。kube-controller-manager：所有资源的自动化控制中心。当集群状态与期望不同时，kcm会努力让集群恢复期望状态，比如：当一个po
python3.7安装包
08-19
python3.7安装包
common-debug.rar_Common Errors
09-23
No. of total frames received, including ones that may have had errors.
yaml .info: 学习 和开发 YAML
05-31
yaml .info 该网站旨在成为 YAML 用户和开发人员的有用资源。 它很新，还有很多缺失的章节，但我已经很高兴收到有关如何改进的建议以及您希望看到的信息类型。 教程 有很多页面解释 YAML 。 他们中的大多数都遗漏了一些东西或使用了错误的术语。 此外，其中大部分是为 YAML 1.1 编写的，在 YAML 1.2 中存在一些显着差异。 我认为使用 YAML 规范中也使用的官方词汇很重要。 图书馆 库部分对用户很有用。 它还为开发人员实施 YAML 库或使用 YAML 实施应用程序提供信息。 关于 在过去的几年里，我一直在研究 YAML 的不同方面，并看到需要一个包含此类信息的网站。
yaml 语法 学习 .md
08-25
yaml 语法 学习 .md
深度 学习 八股文
qq_37236149的博客
03-29 441
深度 学习 八股文积累
Yolov8安装及环境搭建详解
yjcccccc的博客
01-13 5090
由于u神的新版本yolov8，想要打造成整合的框架，淡化各版本的数字区分，所以集合成库pip安装，但大家会发现pip的时候安装不下来，因为里面的某些依赖库镜像源可能没有，本文将手把手一步步展示安装过程。
20220316python
Stefanlov1ez的博客
04-12 1143
项目场景： 此次为在尝试使用pip安装ruamel_ yaml _conda和cffi两个python基础包的时候出现的错误 ruamel_ yaml _conda>=0.11.14 cffi>=1.12 在安装tensorflow的时候要求以上两个包达到更高的版本 问题描述 提示：这里描述项目中遇到的问题： 报错信息如下 C:\Users\lenovo>pip install ruamel_ yaml _conda Looking in indexes: https://mirrors.aliyu
springboot 学习 笔记
最新发布
06-09
好的，我可以和你分享一些关于Spring Boot的 学习 笔记 。 1. Spring Boot是什么？ Spring Boot是一个基于Spring框架的快速开发框架，它能够帮助开发者快速搭建Spring项目，简化了Spring应用开发的繁琐过程，提高了开发效率。 2. Spring Boot的优点有哪些？ Spring Boot的优点有很多，其中包括： - 简化了Spring应用的开发，提高了开发效率； - 集成了很多常用的第三方库，减少了依赖管理的工作； - 自动化配置，减少了配置文件的编写工作； - 内嵌了Tomcat等Web容器，使得应用的部署更加便捷； - 提供了Actuator等模块，使得应用的监控和管理更加便捷。 3. Spring Boot的核心注解有哪些？ Spring Boot的核心注解包括： - @SpringBootApplication：标注在启动类上，代表这是一个Spring Boot应用； - @Controller：标注在控制器类上，处理HTTP请求； - @Service：标注在服务类上，用于处理业务逻辑； - @Repository：标注在数据访问类上，用于数据库访问； - @Configuration：标注在配置类上，用于配置Spring应用上下文。 4. Spring Boot的配置文件有哪些？ Spring Boot的配置文件包括： - application.properties：基于Key-Value的属性文件； - application.yml：基于 YAML 语法的配置文件。 5. 如何使用Spring Boot集成数据库？ 使用Spring Boot集成数据库需要完成以下几个步骤： - 在pom.xml中添加相关数据库依赖； - 配置数据源和JPA/Hibernate等相关配置； - 编写实体类和DAO层代码。 以上就是一些关于Spring Boot的 学习 笔记 ，希望能对你有所帮助。
“相关推荐”对你有帮助么？

    非常没帮助
    没帮助
    一般
    有帮助
    非常有帮助

    关于我们
    招贤纳士
    商务合作
    寻求报道
    400-660-0108
    kefu@csdn.net
    在线客服
    工作时间 8:30-22:00

    公安备案号11010502030143
    京ICP备19004658号
    京网文〔2020〕1039-165号
    经营性网站备案信息
    北京互联网违法和不良信息举报中心
    家长监护
    网络110报警服务
    中国互联网举报中心
    Chrome商店下载
    账号管理规范
    版权与免责声明
    版权申诉
    出版物许可证
    营业执照
    ©1999-2023北京创新乐知网络技术有限公司

songyuc CSDN认证博客专家 CSDN认证企业博客
码龄11年 暂无认证

767
    原创

8846
    周排名

1093
    总排名

173万+
    访问

    等级

1万+
    积分

236
    粉丝

762
    获赞

417
    评论

1863
    收藏

持之以恒
签到新秀
五一创作勋章
笔耕不辍
学习力
阅读者勋章
知无不言
求知
受益良多
持续创作
勤写标兵
创作能手
新人勋章
私信
关注
热门文章

    解决“cv2.error: OpenCV(3.4.2) C:\projects\opencv-python\opencv\modules\highgui\src\window.cpp:356:...” 141054
    Anaconda中如何查看已经安装的包 114699
    Python中如何查看（打印输出）变量的数据类型 69387
    OpenCV中出现“Microsoft C++ 异常: cv::Exception，位于内存位置 0x0000005C8ECFFA80 处。”的异常 57805
    如何验证是否正确安装了CUDA 56922

分类专栏

    车道线检测 2篇
    ROS2 4篇
    无人驾驶 14篇
    自动驾驶 30篇
    开源计划 6篇
    PyTorch学习 28篇
    《南溪的目标检测学习笔记》 28篇
    《Ubuntu学习笔记》 7篇
    电脑大师~ 8篇
    TensorFlow学习 4篇
    Bash
    博弈论 5篇
    PyCharm学习 2篇
    Markdown学习 2篇
    计算机组成原理
    Jupyter Lab 4篇
    Linux学习 4篇
    MMDetection
    人脸检测 3篇
    人脸检测与识别 2篇
    数据标注 3篇
    语义分割 7篇
    SLAM 1篇
    语义分割课程 3篇
    多目标跟踪 3篇
    标注工具 2篇
    Apollo 1篇
    Android测试 5篇
    Electron 4篇
    超参数搜索
    Image Caption 5篇
    OCR 4篇
    数字公式识别 2篇
    操作系统 2篇
    实验室资料 5篇
    笔记 3篇
    图像识别 2篇
    人脸识别 2篇
    Anaconda 1篇
    强化学习 3篇
    Backbone 5篇
    CSS 1篇
    超参数搜素 1篇
    EfficientNet 1篇
    图像分类 1篇
    Windows程序开发 1篇
    Android学习 1篇
    Python文件读写 1篇
    高精度地图 1篇
    模拟按键 1篇
    设计模式 1篇
    Detectron2 1篇
    实例分割 1篇
    GAN 5篇
    matplotlib 2篇
    Kaggle数据竞赛 1篇
    Cross-Modal Retrieval 1篇
    算法与数据结构 1篇
    CS231n课程学习 1篇
    无监督学习 1篇
    音频编码 2篇
    Java学习 9篇
    C++学习
    Android音频播放 1篇
    Android调用C/C++代码 3篇
    JNI编程 1篇
    Android编程 4篇
    Android调试 2篇
    FFTW学习 1篇
    编程心得 3篇
    论文写作 3篇
    MATLAB学习 15篇
    易语言学习 2篇
    CE学习
    网络安全 1篇
    Eclipse学习 2篇
    Java文件读写 2篇
    Android UI 1篇
    《Python学习笔记》 46篇
    CUDA & cuDNN 6篇
    《OpenCV学习笔记》 8篇
    VS学习 1篇
    TeXstudio学习 2篇
    《LaTeX写作》 4篇
    计算机图形学 2篇
    Machine Learning by Andrew Ng 9篇
    机器学习 15篇
    电脑专家~ 6篇
    Anaconda学习 9篇
    计算机视觉 23篇
    图像处理 11篇
    高等数学 3篇
    模式识别 3篇
    概率论与数理统计 4篇
    NumPy学习 11篇
    Jupyter Notebook 6篇
    《深度学习笔记》 29篇
    pandas学习 1篇
    目标检测 62篇
    CNN学习 13篇
    旋转目标检测 1篇

最新评论

    Anaconda——如何“重命名”conda虚拟环境（通过复制和删除操作实现）

    小久木: https://docs.conda.io/projects/conda/en/latest/commands/rename.html
    RT-DETR的学习笔记

    啊！人哪有不疯的: 还没有，我也在等作者回应
    RT-DETR的学习笔记

    维苏威火山: 请问您进群了吗，可以拉一下我吗
    RT-DETR的学习笔记

    songyuc: 推理速度你可以在PaddleDetection上查看哈
    RT-DETR的学习笔记

    啊！人哪有不疯的: 你好，请问有具体教程吗？我跑了好久都没跑出来

您愿意向朋友推荐“博客详情页”吗？

    强烈不推荐
    不推荐
    一般般
    推荐
    强烈推荐

最新文章

    【新日语】第15課 お弁当を忘れないでください
    第11課 受付の人は親切でした
    【新日语】第9課 きれいな写真をたくさん撮ります

2023
07月 6篇
06月 21篇
05月 23篇
04月 40篇
03月 45篇
02月 28篇
01月 24篇
2022年 93篇
2021年 123篇
2020年 169篇
2019年 139篇
2018年 20篇
2017年 14篇
2016年 24篇
目录

    1. 安装yaml
    2. Yaml格式说明
        2.1 数据类型（yaml无强制类型限定） 
    3. 读取yaml
    4. 写入yaml
    5. OmegaConf笔记
        5.1 新建字典 [doc]
        5.2 更新字典
            OmegaConf.merge() ≈ \approx ≈ dict.update() 
        5.3 实现get_leaves_str() 

新手引导 客服 举报 返回顶部
