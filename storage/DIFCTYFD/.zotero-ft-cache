
返回主页
短短的路走走停停
长长的代码写个不停

    博客园
    首页
    新随笔
    联系
    订阅
    管理

随笔 - 104  文章 - 0  评论 - 73  阅读 - 84万
10分钟了解代码命名规范（Java、Python）
前言

关于代码命名，我相信是经常困扰很多小伙伴的一个问题，尤其是对于强迫症晚期患者。怎么说呢，每次小编在写代码之前，总会在想啊想啊，用什么命名法好呢？对于经常在C++、Java、Python等主流语言上切换的强迫症来说，换个语言换种命名风格简直不要太混乱。

今天就来梳理一下常见的代码命名规范以及适用范围吧。
常见命名规范

为什么需要命名规范呢？世界级软件大师 Martin Fowler 大神都说过 CS 领域有两大最难的事情，一是缓存失效，一是程序命名。

《Clean Code》这本书明确指出：

    代码的注释不是越详细越好。实际上好的代码本身就是注释，我们要尽量规范和美化自己的代码来减少不必要的注释。若编程语言足够有表达力，就不需要注释，尽量通过代码来阐述。

要想让你的编程语言足够有表达力，良好的命名规范是必不可少的。同时，花几分钟学学规范的命名，也能让你的代码看起来赏心悦目，何乐而不为呢。
1. 驼峰命名法（CamelCase）

骆驼式命名法（Camel-Case）又称驼峰式命名法，是电脑程式编写时的一套命名规则（惯例）。正如它的名称CamelCase所表示的那样，是指混合使用大小写字母来构成变量和函数的名字。程序员们为了自己的代码能更容易的在同行之间交流，所以多采取统一的可读性比较好的命名方式。

它又可以分为以下几种。
(1) 小驼峰命名法（lowerCamelCase）

除第一个单词之外，其他单词首字母大写。 方法名、参数名、成员变量、局部变量需要使用小驼峰命名法（lowerCamelCase） 。比如：

 getUserInfo() createCustomThreadPool() findAllByUserName(String userName) TaskRepository taskRepository;  

(2) 大驼峰命名法（CamelCase）

相比小驼峰法，大驼峰法（即帕斯卡命名法）把第一个单词的首字母也大写了。 常用于类名，命名空间等 。如：

 class TaskDateToSend {} class TaskLabelToSend {} SettingRepository  

2. 蛇形命名法（snake_case）

蛇形法是全由小写字母和下划线组成，在两个单词之间用下滑线连接即可。 测试方法名、常量、枚举名称需要使用蛇形命名法（snake_case） 。如：

 first_name last_name MAX_ITERATION LAST_DATA  

3. 串式命名法（kebab-case）

在串式命名法中，各个单词之间通过下划线“-”连接，比如：

 hello-world first-project  

建议项目文件夹名称使用串式命名法（kebab-case），比如 dubbo 项目的各个模块的命名是下面这样的：

总结一下

语言场景

给出各个场景下的命名规则，大家要养成习惯。事实上，如果经常在各个语言上切换的话，真的可能搞混。所以今天就Mark一下吧。
Java命名规范
总体命名规范

    类名 需要使用大驼峰命名法（UpperCamelCase）风格。
    方法名、参数名、成员变量、局部变量 需要使用小驼峰命名法（lowerCamelCase）。
    测试方法名、常量、枚举名称 需要使用蛇形命名法（snake_case） ，比如test_get_user()、TIME_LIMIT。并且，测试方法名称要求全部小写， 常量 以及 枚举名称 需要全部大写。
    项目文件夹名称 使用串式命名法（kebab-case），比如dubbo-registry。
    包名 统一使用小写，尽量使用单个名词作为包名，各个单词通过 "." 分隔符连接，并且各个单词必须为单数。
    抽象类 命名使用 Abstract 开头。如：public abstract class AbstractClient extends AbstractEndpoint{}。
    异常类 命名使用 Exception 结尾。如：public class NoSuchMethodException extends RuntimeException{}。
    测试类 命名以它要测试的类的名称开始，以 Test 结尾。如：public class AnnotationUtilsTest{}。

包名命名规范

Java的包名由小写单词组成，包的路径符合所开发的系统模块的定义，以便通过包名可得知其属于哪个模块，从而方便到对应包里找相应的实现类。
1. 常规包名
为了保障每个Java Package命名的唯一性,在Java编程规范中要求开发人员在自己定义的包名前加上唯一的前缀.由于互联网上的域名称是不会重复的,所以多数开发人员采用自己公司在互联网上的域名称作为自己程序包的唯一前缀.例如 : com.sun.swt...

    公司项目
    com : 公司项目,copyright由项目发起的公司所有.
    包名 : com.公司名.项目名.模块名..
    团队项目
    team : 团队项目,指由团队发起,并由该团队开发的项目,copyright属于该团队所有.
    包名 : team.团队名.项目名.模块名..

2. 自定义包名
一般公司命名为com.公司名.项目名.模块名....那我们个人的项目又怎么命名呢?个人的英语单词有individual、personal、private、one-man,进一步对以上四个单词词意进行分析并在保证了唯一性,继而使用每个单词的前4个字母作为前缀,与com也做了区分.示例如下所示:

    indi : 个体项目,指个人发起,但非自己独自完成的项目,可公开或私有项目,copyright主要属于发起者. 包名 : indi.发起者名.项目名.模块名..
    pers : 个人项目,指个人发起,独自完成,可分享的项目,copyright主要属于个人.包名 : pers.个人名.项目名.模块名..
    priv : 私有项目,指个人发起,独自完成,非公开的私人使用的项目,copyright属于个人.包名 : priv.个人名.项目名.模块名..
    onem : 与indi相同，推荐使用indi.

Python命名规范

类 ：总是使用首字母大写单词串。如MyClass、ClassName。内部类可以使用额外的前导下划线。

函数和方法 ：小写+下划线，如method_name。

函数参数 ：小写+下划线，如function_parameter_name。如果一个函数的参数名称和保留的关键字冲突，通常使用一个后缀下划线，如random_。

全局变量 ：对于from M import *导入语句，如果想阻止导入模块内的全局变量可以使用旧有的规范，在全局变量上加一个前导的下划线，如_var_name。 应避免使用全局变量 。

变量 ：小写，由下划线连接各个单词。如color、this_is_a_variable。
注意 ：

    不论是类成员变量还是全局变量，均不使用 m 或 g 前缀。
    私有类成员使用单一下划线前缀标识。
    变量名不应带有类型信息，因为Python是动态类型语言。如 iValue、names_list、dict_obj 等都是不好的命名。

常量 ：常量名所有字母大写，由下划线连接各个单词如MAX_OVERFLOW，TOTAL。

异常 ：以“Error”作为后缀。

文件名 ：全小写,可使用下划线

包 ：应该是简短的、小写的名字。如果下划线可以改善可读性可以加入，如mypackage。

模块 ：与包的规范同，如mymodule。

缩写 ：命名应当尽量使用全拼写的单词，缩写的情况有如下两种：

    常用的缩写，如XML、ID等，在命名时也应只大写首字母，如XmlParser。
    命名中含有长单词，对某个单词进行缩写。这时应使用约定成俗的缩写方式。
    例如：
    function 缩写为 fn
    text 缩写为 txt
    object 缩写为 obj
    count 缩写为 cnt
    number 缩写为 num，等。

前导后缀下划线 ：
一个前导下划线：表示非公有。
一个后缀下划线：避免关键字冲突。
两个前导下划线：当命名一个类属性引起名称冲突时使用。
两个前导和后缀下划线：“魔”（有特殊用图）对象或者属性，例如__init__或者__file__。绝对不要创造这样的名字，而只是使用它们。
注意 ：关于下划线的使用存在一些争议。

特定命名方式 ：主要是指 xxx 形式的系统保留字命名法。项目中也可以使用这种命名，它的意义在于这种形式的变量是只读的，这种形式的类成员函数尽量不要重载。如
class Base(object):
def init (self, id, parent = None):
self. id = id
self. parent = parent
def message (self, msgid):
其中 id 、 parent 和 message 都采用了系统保留字命名法。

Python推荐使用蛇形命名法，因为 Python 是蟒蛇啊，理所当然是用蛇形命名……

综合各方面考虑，驼峰式命名法比较好，优势明显，事实上，目前使用驼峰式命名法的人也真的越来越多了。
reference

    三种编程命名规则：驼峰命名法 （壹）
    因为命名被主管diss无数次。简单聊聊编程最头疼的事情之一：命名
    Java 命名规范
    Python 为什么推荐蛇形命名法？

分类: C/C++ , python , 算法
标签: python , java , C/C++
好文要顶 关注我 收藏该文
短短的路走走停停
粉丝 - 229 关注 - 2
+加关注
0
0
« 上一篇： 什么是算法？从枚举到贪心再到启发式（下）-终于有人把邻域搜索讲清了！
» 下一篇： 10分钟教你使用Picgo+GitHub+ jsDelivr搭建CDN加速免费图床
posted @ 2020-06-27 12:48   短短的路走走停停   阅读( 4673 )  评论( 0 )  编辑   收藏   举报
刷新评论 刷新页面 返回顶部
登录后才能查看或发表评论，立即 登录 或者 逛逛 博客园首页
【推荐】园子资深博主直播，6月18日下午3点：冰蓝老师《ChatGPT 初探》
【推荐】园子的商业化努力-阿里云云市场合作-第一期优惠活动发布上线
【推荐】腾讯云爆款云服务器首年95元，领折上折代金券最高再省1120元
【推荐】有奖征文挑战，ZEGO开发者社区举办首季音视频开发主题活动
【推荐】阿里云-持续降低用云成本：云服务器全面降价，低至0.3元/天
编辑推荐：
· .NET 源码解读 kestrel 服务器及创建 HttpContext 对象流程
· 记一次加锁导致 ECS 服务器 CPU 飙高的处理
· 揭秘 Task.Wait
· 浅聊一下 C#程序的 内存映射文件 玩法
· ASP.NET Core 6框架揭秘实例演示[37]：重定向的N种实现方式
阅读排行：
· .NET源码解读kestrel服务器及创建HttpContext对象流程
· 6 种方式读取 Springboot 的配置，老鸟都这么玩（原理+实战）
· 【.NET深呼吸】将XAML放到WPF程序之外
· 【技术积累】Linux中的基础知识【二】
· HTTP请求：requests的进阶使用方法浅析
公告
昵称： 短短的路走走停停
园龄： 4年11个月
粉丝： 229
关注： 2
+加关注
最新随笔

    1.Machine-Learning–Based Column Selection for Column Generation
    2.基于学习的方法决定在哪些分支节点上运行heuristic算法
    3.深度学习结合树搜索求解集装箱预翻箱问题
    4.ASP.NET 大学场地预约系统
    5.基于branch and bound插入的large neighborhood search
    6.盘点下那些年我们用过的编程工具IDE都有哪些
    7.帝国竞争算法(imperialist competitive algorithm, ICA )详解+Java代码实现
    8.10分钟教你使用Picgo+GitHub+ jsDelivr搭建CDN加速免费图床
    9.10分钟了解代码命名规范（Java、Python）
    10.什么是算法？从枚举到贪心再到启发式（下）-终于有人把邻域搜索讲清了！

我的标签

    智能算法 (47)
    python (40)
    算法 (27)
    C/C++ (19)
    java (14)
    干货 (14)
    精确算法 (12)
    数据结构 (8)

积分与排名

    积分 - 236309
    排名 - 4197

随笔分类 (207)

    C/C++(43)
    python(44)
    数据结构(23)
    算法(58)
    智能算法(39)

随笔档案 (104)

    2021年7月(3)
    2021年6月(1)
    2020年11月(1)
    2020年7月(2)
    2020年6月(4)
    2020年5月(2)
    2020年4月(26)
    2020年1月(3)
    2019年8月(4)
    2019年7月(7)
    2019年6月(11)
    2019年5月(9)
    2019年3月(6)
    2018年11月(7)
    2018年10月(2)
    更多

阅读排行榜

    1. 【python】10分钟教你用Python做个打飞机小游戏超详细教程(93498)
    2. 【C/C++】10分钟教你用C++写一个贪吃蛇附带AI功能（附源代码详解和下载）(54585)
    3. 10分钟手把手教你运用Python实现简单的人脸识别(48489)
    4. 10分钟教你用Python中的Matplotlib绘制多图并合并展示(40828)
    5. 【python】10分钟教你用python打造贪吃蛇超详细教程(40127)

推荐排行榜

    1. 【python】10分钟教你用Python做个打飞机小游戏超详细教程(7)
    2. 10分钟教你用Python中的Matplotlib绘制多图并合并展示(4)
    3. 10分钟手把手教你运用Python实现简单的人脸识别(4)
    4. 【C/C++】10分钟教你用C++写一个贪吃蛇附带AI功能（附源代码详解和下载）(4)
    5. 【智能算法】粒子群算法（Particle Swarm Optimization）超详细解析+入门代码实例讲解(3)

Copyright © 2023 短短的路走走停停
Powered by .NET 7.0 on Kubernetes
