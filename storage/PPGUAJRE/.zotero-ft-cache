
猴子都能懂的GIT入门〜掌握版本管理〜
目录

    入门篇
    高级篇
    Git索引

Git的基础
首先

初次见面，请多多关照。我是生在博多，成长在Git社区的「猴子老师」。今天我们要来一起学习版本管理系统「Git」哦。

要把文档还原到编辑前的状态，大家都是怎么做的呢？

最简单的方法就是先备份编辑前的文档。使用这个方法时，我们通常都会在备份的文档名或目录名上添加编辑的日期。但是，每次编辑文档都要事先复制，这样非常麻烦，也很容易出错。

备份文档的实例

再加上，如果像上图那样毫无命名规则的话，就无法区分哪一个文档是最新的了。而且，如果是共享文件的话，应该加上编辑者的名字。还有，那些文档名字没有体现修改内容。

另外，如果两个人同时编辑某个共享文件，先进行编辑的人所做的修改内容会被覆盖，相信大家都有这样的经历。

共享文件操作失败实例

Git版本管理系统就是为了解决这些问题应运而生的。
使用Git进行版本管理

Git是一个分布式版本管理系统，是为了更好地管理Linux内核开发而创立的。

Git可以在任何时间点，把文档的状态作为更新记录保存起来。因此可以把编辑过的文档复原到以前的状态，也可以显示编辑前后的内容差异。

而且，编辑旧文件后，试图覆盖较新的文件的时候（即上传文件到服务器时），系统会发出警告，因此可以避免在无意中覆盖了他人的编辑内容。

使用版本管理的共享文件操作实例

用Git管理文件的话，更新的历史会保存在Git，所以不需要备份文件啦。非常方便吧！
下一页
Git的基础

    首先
    管理历史记录的数据库
    修改记录的提交
    工作树和索引

教程1 Git的基础

    安装Git
    初期设定
    新建数据库
    提交文件

共享数据库

    push到远程数据库
    克隆远程数据库
    从远程数据库pull

教程2 共享数据库

    在贝格乐建立远程数据库
    push到远程数据库
    克隆远程数据库
    从克隆的数据库进行push
    从远程数据库pull

整合修改记录

    合并修改记录
    解决冲突

教程3 整合修改记录

    push冲突的状态
    解决冲突

简体中文

    Facebook
    twitter
    YouTube

Powered by
贝格乐 - 每个团队成员的项目管理工具

Copyright © 2004- 2023 Nulab Inc. All rights reserved.
UP
