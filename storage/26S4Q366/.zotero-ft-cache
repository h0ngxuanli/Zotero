
Git教程 git pull 和 git clone的区别#yyds干货盘点#
关注 51Ann
Git教程 git pull 和 git clone的区别#yyds干货盘点#
推荐 原创

51Ann 2021-11-24 23:16:36 ©著作权

文章标签 git 远程仓库 插入图片 github 2d 文章分类 代码人生 yyds干货盘点 阅读数 1820
©著作权归作者所有：来自51CTO博客作者51Ann的原创作品，请联系作者获取转载授权，否则将追究法律责任

网上看好多人解释pull和clone的区别，说什么pull是更新本地代码，clone是本地从无到有的过程，但有一点没提到，恰好我今天又犯了这个问题，因为我原来都是直接从远程仓库pull，今天突然发现发现pull不能用，clone才生效，我才意识到这个问题。决定记录一下。
使用方法

    有权限的仓库
        本地无代码
            git pull
            git clone
        本地有代码
            git pull
    无权限的仓库
        本地无代码
            git clone
        本地有代码
            删了重新下

如果只想知道怎么用就不用往下看了，如果想知道原因继续看。
---------------------分割线---------------------
1 git pull

git pull 适用于 从用户有权限的仓库下拉代码 ， 不管本地有没有代码 。

因为我平时下拉代码都是直接 git pull 。
1.1 我有权限的仓库

我有权限的仓库指的是我自己的，或者团队中我可以使用的仓库。

要使用 git pull 首先你要确定已经连接远程仓库。要不然你直接 git pull orgin master 那Github会问你：“什么master？哪个master？你就是老子的master吗？”

所以首先要连接远程仓库。

Git教程 git pull 和 git clone的区别#yyds干货盘点#_git

    init初始化空白的本地仓库，里边除了 .git 啥也没有
    连接远程仓库

1.1.1 本地没代码

Git教程 git pull 和 git clone的区别#yyds干货盘点#_git_02

git remote -v 用于显示当前本地仓库连接的远程仓库，你可以连接好几个。然后一个仓库是成对存在的，一个上传一个下拉。前边origin我一般称为远程仓库代称，后边的是你的连接方式。

现在显示我连接了一个github的远程仓库取名叫origin。

Git教程 git pull 和 git clone的区别#yyds干货盘点#_2d_03

空白仓库直接使用 git pull 就可以下拉代码了。
1.1.2 本地有代码

本地有代码是什么情况。

    团队合作，一个仓库多人使用
    你自己的仓库，你在多台电脑上使用（比如宿舍一个，实验室一个）

为什么要 git pull 呢？不同电脑上代码版本不一样。所以为了减少工作并且保证代码版本一致，要在每次写代码的时候下拉代码。在写完之后push到远程仓库。画个图解释一下。
Git教程 git pull 和 git clone的区别#yyds干货盘点#_2d_04
Git教程 git pull 和 git clone的区别#yyds干货盘点#_插入图片_05
1.2 我没权限的仓库

没权限的仓库指的是别人的仓库。别人不给权限，你当然不能随意修改人家的代码了。

没权限的仓库不能使用 git pull 。比如：

今天我像往常一样去下载代码。但是这是我第一次下载别人的代码。
Git教程 git pull 和 git clone的区别#yyds干货盘点#_github_06

我像往常一样添加仓库链接，git pull下拉。但是他提示我：

    Permission denied (publickey).

    fatal: Could not read from remote repository.

    Please make sure you have the correct access rightsand the repository exists.

Permission denied是说SSH密钥无法使用，让我确认我是否有权限访问或者这个仓库是不是存在。
仓库确实是存在的。所以肯定是我没有权限。

Git教程 git pull 和 git clone的区别#yyds干货盘点#_github_07

解释一下三步操作：

    添加远程仓库，用SSH连接
    从仓库master分支下拉代码
    删除我添加的远程仓库（既然不能用我当然删掉了）

这时候我想起来：SSH只有仓库所有者能用。因为你电脑上配置的SSH和你github上的SSH是一对的，只有你在你电脑上使用你的github仓库才能用SSH。

既然仓库所有者才能用SSH，那我换HTTP不就行了。（此时我还没意识到问题的严重性）

Git教程 git pull 和 git clone的区别#yyds干货盘点#_git_08

    我又添加了https的连接
    第二步我又下拉的仓库

然后他又提示我：

    fatal: unable to access ‘  https://github.com/hitvoice/DrQA.git/ ’: OpenSSL SSL_read: Connection was reset, errno 10054

意思还是我无法连接。

这时候我突然意识到了问题😐。这好像是人家的仓库哎，我不能使用remote连接远程仓库之后下拉啊。因为如果我能连上的话就意味着我能随意修改人家的代码。所以我肯定不能使用这样的方式pull代码啊！！！

所以得用 git clone
2 git clone

git clone 适用于本地没有代码 ，你要下载。 你连不连接远程仓库。有无仓库权限皆可 。

接上边的说，意识到使用 git clone 之后，我删除了刚才的HTTPS连接远程仓库，然后直接 git clone ，代码成功下载下来了。

Git教程 git pull 和 git clone的区别#yyds干货盘点#_git_09

    我删除了上边的https连接远程仓库的方法
    git remote -v 用于查看你本地仓库都连接了哪些远程仓库，如果连接了会显示仓库代号和连接方式，我这里输出空白，就是没连接任何远程仓库的状态
    git clone 下载代码成功了。

上边说的是别人的仓库，那如果是我有权限的仓库呢？

新建一个本地仓库。很明显是成功的。SSH能成功，那HTTPS必定成功。不用remote能成功，那用了remote也必定成功。（觉得这些稍微会用github的一般不用解释了，如果实在不明白评论区问我。）

Git教程 git pull 和 git clone的区别#yyds干货盘点#_插入图片_10

我是萝莉安。今天又拿出勤时间写博客了。离谱。

    赞
    收藏
    评论
    分享
    举报

上一篇： GitBash教程 使用 git rebase修改历史commit信息 #yyds干货盘点#

下一篇： PyTorch教程 层和块#yyds干货盘点#
提问和评论都可以，用心的回复会被更多人看到 评论
相关文章

    【Git】git clone与git pull区别

    从字面意思也可以理解，都是往下拉代码，git clone是克隆，git pull 是拉。但是，也有区别： 从远程服务器克隆一个一模一样的版本库到本地,复制的是整个版本库，叫做clone.（clone是将一个库复制到你的本地，是一个本地从无到有的过程） 从远程服务器获取到一个branch分支的更新到本
    GITHUB
    git clone与git pull区别

    最近一直焦虑换工作与面试，自然面试过程中也被问到了很多问题，在一家公司中，被问到了git相关的知识。 面试官提出了git clone 与 git pull有什么区别。由于自己对git的掌握情况不是特别深入，感觉瞬间被问蒙圈一样。后来，查了相关的文档，看了一些文章，自己有了一丁点的理解，觉得应该写下来
    git 版本库 本地库
    git clone,git push,git pull

    git clone命令是对版本库进行备份的操作，以防止意外而丢失版本库信息。$git clone /path/to/my/workspace/demo /path/to/my/workspace/demo-backup这样便在workspace文件夹下生成一个demo版本库的备份文件夹demo-backup,之后便可以在demo和demo-backup之间进行git pull和git push操作
    git clone git push git pull
    git pull 、git fetch、 git clone

    git clone 代表从远程克隆过来包括所有的版本信息 git fetch是从远程获取最新的版本 git pull相当于 git fetch 然后再git merge
    版本控制 git 版本信息
    【git】git pull和git pull --rebase的区别和使用

    使用下面的关系区别这两个操作：git pull = git fetch +git mergegit pull --
    git git rebase 解决冲突 远程分支
    Git fetch和git pull的区别

    Git中从远程的分支获取最新的版本到本地有这样2个命令： 1.  git fetch ：相当于是从远程获取最新版本到本地，不会自动merge     Git fetch origin mastergit log -p master..origin/mastergit merge origin/master   &nbs
    git 新版本
    git clone和git pull的区别

    1.需不需要本地文件夹是仓库 git clone是将整个工程复制下来所以，不需要本地是仓库（没有.git文件夹） git clone git pull需要先初始化本地文件夹文一个仓库 git pull 2.切换分支的问题 切换分支 3.push的问题 push 1.需不需要本地文件夹是仓库 git
    git 本地文件 初始化 f5 Windows
    git clone、git pull和git fetch的用法及区别

    声明：码字不易，转载请注明出处，欢迎文章下方讨论交流。Git 常用命令速查表 最近在一个学习小组里学习AI的课程，我们所有的学习资料和homework都放在gitlab上。今天一个小队友从gitlab上load仓库的时候问起了这个问题，正好在此总结记录一下，仅供参考。 1.git clone git
    git 远程仓库 远程分支 tensorflow 版本库
    Git 中 pull 和 clone 的区别

    clone 是本地没有 repository 时，将远程 repository 整个下载过来。 pull 是本地有 repository 时，将远程 repository 里新的 commit 数据(如有的话)下载过来，并且与本地代码merge。 note：git pull相当于git fetch和
    git 数据 本地代码 分享
    git pull与git clone

    1.如何添加远程库？ 现在的情景是：我们已经在本地创建了一个Git仓库后，又想在github创建一个Git仓库，并且希望这两个仓库进行远程同步，这样github的仓库可以作为备份，又可以其他人通过该仓库来协作。 首先，登录github上，然后在右上角找到“create a new repo”创建一个
    github git 推送 远程库 git仓库
    差异:git clone , git fetch, git pull和git rebase

    Git Pull据我所知，当你使用git pull时，它将会获取远程服务器(你请求的，无论什么分支)上的代码，并且立即合并到你的本地厂库，Pull是一个高等级的请求，默认会支持Fetch和merge的操作，如果不是为了使用上的方便，你可以完全不使用它。 1 2 3 4 5 $git checkout
    git 远程服务器 github 分支合并 其他
    git clone、git pull和git fetch的用法及区别--更易理解

    最近在一个学习小组里学习AI的课程，我们所有的学习资料和homework都放在gitlab上。今天一个小队友从gitlab上load仓库的时候问起了这个问题，正好在此总结记录一下，仅供参考。 1.git clone git clone顾名思义就是将其他仓库克隆到本地，包括被clone仓库的版本变化。
    git 远程仓库 远程分支 tensorflow 版本库
    [Git] Git fetch和git pull的区别

    reference : ://blog..net/hudashi/article/details/76457 Git中从远程的分支获取最新的版本到本地有这样2个命令：1. git fetch：相当于是从远程获取最新版本到本地，不会自动merge git fetch origin
    git 新版本 .net 其他
    git学习--clone和pull

    clone：从远程服务器克隆一个一模一样的版本库到本地,复制的是整个版本库.（clone是将一个库复制到你的本地，是一个本地从无到有的过程） pull：从远程服务器获取到一个branch分支的更新到本地，并更新本地库.（pull是指同步一个在你本地有版本的库内容更新的部分到你的本地库） git pu
    Git git 版本库 本地库 分支合并
    git pull 和 git fetch 区别

    一直很想搞懂git pull 和 git fetch 区别是什么，看了很多文章，越看越懵， 然后把代码拆分出来这样更容易理解了，希望对大家有帮助~ Git中从远程的分支获取最新的版本到本地有这样2个命令： 1. git fetch：相当于是从远程获取最新版本到本地，不会自动merge git fet ...
    git 新版本 IT
    git pull 和git fetch的区别

    首先在作用上他们的功能是大致相同的，都是起到了更新代码的作用。 首先我们要说简单说git的运行机制。git分为本地仓库和远程仓库，我们一般情况都是写完代码，commit到本地仓库（生成本地仓的commit ID，代表当前提交代码的版本号），然后push到远程仓库（记录这个版本号），这个流程大家都熟悉 ...
    git 版本号 远程仓库 github 提交代码
    Python判断不全部为空 python判断数据为空

    一、None与Null的区别(1)基本介绍 None可以看作一个具体的值用来初始化变量，可以理解为空值。 python没有Null关键字，在这类脚本语言中变量和值是绑定关系，如果说一个变量是Null，实际是说它没有与任何值绑定，也就是说该变量实际上并未被定义，可以理解为空。a = None print(a) print(a=='') print(a==0) print(type(a)) print
    Python判断不全部为空 学习 python 字符串 操作符
    SQL server 前200条 sql server怎么编辑前1000行

    1. 当用户在在SQL Server 2008企业管理器中更改表结构时，必须要先删除原来的表，然后重新创建新表，才能完成表的更改，如果强行更改会出现以下提示： 不允许保存更改。您所做的更改要求删除并重新创建以下表。您对无法重新创建的标进行了更改或者启用了“阻止保存要求重新创建表的更改”选项。如果要去掉此提示，打开SQL 2008 在最上面 工具-〉选项-〉左侧有个设计器-〉表设计器和数据库设计器
    SQL server 前200条 数据 sql语句 SQL
    python boto3 安装 python3如何安装

    python3安装与环境搭建1.下载python3去官网下载python3程序： https://www.python.org/ （如下网站下载到Windows安装程序：https://www.python.org/downloads/windows/ 选择对应版本的 Windows x86-64 executable installer或者 Windows x86 executable inst
    python boto3 安装 python Windows 自定义
    python multiprocess manager python multiprocess managers模块

    process类介绍multiprocessing 模块官方说明文档Process 类用来描述一个进程对象。创建子进程的时候，只需要传入一个执行函数和函数的参数即可完成 Process 示例的创建。python中的多线程无法利用多核优势，如果想要充分地使用多核CPU的资源（os.cpu_count()查看），在python中大部分情况需要使用多进程。Python提供了multiprocessing
    进程池 子进程 进程间通信
    Python任务发布系统 python 发布

    完全参照headfirst书的步骤来实现的。系统为windows。首先为模块创建一个文件夹取名为nester,把你想要发布的代码放到这个文件夹中，这里放的是，nester.py,该文件内容如下，就是一个输出列表的函数： 在文件夹下创建一个名为“setup.py”的文件这个文件包含有关发布的元数据。具体代码如下： 其中，第一句话是从python发布工具导入“setup”函数。 此时文件夹包含两个
    Python任务发布系统 python 发布 上传 命令行

51Ann

    111
    原创
    29.1 万
    人气
    26
    粉丝
    7
    评论

    3
    翻译
    0
    转载
    11
    关注
    12
    收藏

关注 私信
近期文章

    1.自媒体平台下载的视频素材有平台水印怎么办？
    2.入一线大厂；Android程序员一定要做的事
    3.劳动节，这样的自动叠衣服机器人给我来10个
    4.五年前的大厂实习我没有转正，校招进不了大公司就是失败吗？
    5.python代码-基于深度强化学习的微能源网能量管理与优化策略研究 关键词：微能源网；能量管理；深度强化学习

新人福利
文章目录

    第1章   使用方法
    第2章   ---------------------分割线---------------------
    第3章   1 git pull
    1.1 我有权限的仓库
    1.1.1 本地没代码
    1.1.2 本地有代码
    1.2 我没权限的仓库
    第4章   2 git clone

    每日签到
    意见
    反馈

    目录
    赞
    收藏
    评论
    分享

51CTO博客

Copyright © 2005-2023 51CTO.COM 版权所有 京ICP证060544号

关于我们
    官方博客 	全部文章 	热门标签 	班级博客
    了解我们 	在线客服 	网站地图 	意见反馈

友情链接
    开源基础软件社区 	51CTO学堂
    51CTO 	汽车开发者社区

